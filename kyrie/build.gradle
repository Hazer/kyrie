apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.ext.targetSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
}

dependencies {
    implementation "com.android.support:support-compat:$supportLibVersion"
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'kyrie'

    publishedGroupId = 'com.github.alexjlockwood'
    libraryName = 'Kyrie'
    artifact = 'kyrie'

    libraryDescription = 'Animated Vector Drawables on steroids'

    siteUrl = 'https://github.com/alexjlockwood/kyrie'
    gitUrl = 'https://github.com/alexjlockwood/kyrie.git'

    libraryVersion = '0.1.1'

    developerId = 'alexjlockwood'
    developerName = 'Alex Lockwood'
    developerEmail = 'alexjlockwood@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}

project.afterEvaluate {
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            task javadocRelease(type: Javadoc) {
                description = "Generates javadocs"
                failOnError = false
                destinationDir = new File(destinationDir, variant.baseName)
                source = files(variant.javaCompiler.source)
                classpath = files(variant.javaCompiler.classpath.files) + files(android.bootClasspath)
                options.windowTitle("Kyrie Reference")
                options.docTitle("Kyrie Reference")
                options.header("Kyrie Reference")
                options.links('http://docs.oracle.com/javase/8/docs/api')
                options.linksOffline('https://d.android.com/reference', "${android.sdkDirectory}/docs/reference")
                exclude '**/R.java', '**/BuildConfig.java'
            }
        }
    }
}
